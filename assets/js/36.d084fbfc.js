(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{387:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),a("h2",{attrs:{id:"_1-单元测试简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-单元测试简介"}},[t._v("#")]),t._v(" 1. 单元测试简介")]),t._v(" "),a("p",[t._v("单元测试是针对程序的最小单元来进行正确性检验的测试工作，程序单元就是应用的最小可测试部件，一个单元可能是单个程序，类，对象，方法等。单元测试的想法是写一个方法之前就想好这个方法有什么样的输入输出,在开发完成就 测试一下给定的输出是不是产生期望的输出。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-单元测试作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单元测试作用"}},[t._v("#")]),t._v(" 1.1 单元测试作用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("减少bug")]),t._v(" "),a("p",[t._v("单元测试的目的就是通过足够准确的测试用例保证代码逻辑是正确。所以，在单测过程中，必然可以解决一些bug。因为，一旦某条测试用例没有通过，那么我们就会修改被测试的代码来保证能够通过测试。")])]),t._v(" "),a("li",[a("p",[t._v("减少修复bug的成本")]),t._v(" "),a("p",[t._v("一般解决bug的思路都是先通过各种手段定位问题，然后在解决问题。定位问题的时候如果没有单元测试，就只能通过debug的方式一点一点的追踪代码。解决问题的时候更是需要想尽各种方法来重现问题，然后改代码，改了代码之后在集成测试。")]),t._v(" "),a("p",[t._v("因为单元规模较小，复杂性较低，因而发现错误后容易隔离和定位，有利于调试工作。")])]),t._v(" "),a("li",[a("p",[t._v("帮助重构，提高重构的成功率\n我相信，对一个程序员来说最痛苦的事就是修改别人的代码。有时候，一个很大的系统会导致很多人不敢改，因为他不知道改了一个地方会不会导致其他地方出错。可以，一旦有了单元测试，开发人员可以很方便的重构代码，只要在重构之后跑一遍单元测试就可以知道是不是把代码“改坏了”")])]),t._v(" "),a("li",[a("p",[t._v("提高开发速度\n不写单测也许能让开发速度更快，但是无法保证自己写出来的代码真的可以正确的执行。写单测可以较少很多后期解决bug的时间。也能让我们放心的使用自己写出来的代码。整体提高开发速度。")])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-单元测试必要性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-单元测试必要性"}},[t._v("#")]),t._v(" 1.2 单元测试必要性")]),t._v(" "),a("p",[t._v("单元测试可以在软件开发过程的早期就能发现问题。从表面上看，为每个单元程序都编写测试代码似乎是增加了工作量，但是其实这些代码不仅为你织起了一张保护网，而且还可以帮助你快速定位错误从而使你大大减少修复BUG的时间。只要单测的测试用例足够好，那么就可以避免很多低级错误。好的单测不仅不会浪费时间，还会大大节省我们的时间。")]),t._v(" "),a("p",[t._v("其实单元测试不仅能保证项目进度还能优化你的设计。设计的程序耦合度也越来越低。每个单元程序的输入输出，业务内容和异常情况都会尽可能变得简单。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-tdd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-tdd"}},[t._v("#")]),t._v(" 1.3 TDD")]),t._v(" "),a("p",[t._v("Test-Driven Development, 测试驱动开发， 是敏捷开发的一项核心实践和技术，也是一种设计方法论。TDD原理是开发功能代码之前，先编写测试用例代码，然后针对测试用例编写功能代码，使其能够通过。由于TDD对开发人员要求非常高，跟传统开发思维不一样，因此实施起来相当困难。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/02/26/uIyZdrqC8lW3O5V.jpg",alt:"TTD"}})]),t._v(" "),a("p",[t._v("测试驱动开发有好处也有坏处。因为每个测试用例都是根据需求来的，或者说把一个大需求分解成若干小需求编写测试用例，所以测试用例写出来后，开发者写的执行代码，必须满足测试用例。如果测试不通过，则修改执行代码，直到测试用例通过。")]),t._v(" "),a("h3",{attrs:{id:"_1-4-单元测试的正确姿势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-单元测试的正确姿势"}},[t._v("#")]),t._v(" 1.4 单元测试的正确姿势")]),t._v(" "),a("ul",[a("li",[t._v("越重要的代码，越要写单元测试；")]),t._v(" "),a("li",[t._v("代码做不到单元测试，多思考如何改进，而不是放弃；")]),t._v(" "),a("li",[t._v("边写业务代码，边写单元测试，而不是完成整个新功能后再写；")]),t._v(" "),a("li",[t._v("多思考如何改进、简化测试代码。")])]),t._v(" "),a("h2",{attrs:{id:"_2-net单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-net单元测试"}},[t._v("#")]),t._v(" 2. .NET单元测试")]),t._v(" "),a("p",[t._v(".NET中常见的测试框架有MSTest、Nunit和Xunit,目前比较流行的是Xunit。作为NUnit的改进版，xUnit.Net确实克服了NUnit的不少缺点。xUnit.Net的Assert更精简但是又足以满足单元测试的需要，相比之下NUnit的Assert API略显臃肿。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-attributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-attributes"}},[t._v("#")]),t._v(" 2.1 Attributes")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("NUnit 3.x")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MSTest 15.x")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net 2.x")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Comments")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[Test]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[TestMethod]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[Fact]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Marks a test method.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[TestFixture]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[TestClass]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net does not require an attribute for a test class; it looks for all test methods in all public (exported) classes in the assembly.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[ExpectedException]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ExpectedException]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Assert.ThrowsRecord.Exception")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net has done away with the ExpectedException attribute in favor of Assert.Throws.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[SetUp]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[TestInitialize]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Constructor")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("We believe that use of [SetUp] is generally bad. However, you can implement a parameterless constructor as a direct replacement.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[TearDown]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[TestCleanup]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IDisposable.Dispose")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("We believe that use of [TearDown] is generally bad. However, you can implement IDisposable.Dispose as a direct replacement.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[OneTimeSetUp]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ClassInitialize]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IClassFixture<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("To get per-class fixture setup, implement IClassFixture<T> on your test class.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[OneTimeTearDown]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ClassCleanup]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IClassFixture<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("To get per-class fixture teardown, implement IClassFixture<T> on your test class.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("ICollectionFixture<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("To get per-collection fixture setup and teardown, implement ICollectionFixture<T> on your test collection.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('[Ignore("reason")]')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[Ignore]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('[Fact(Skip="reason")]')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Set the Skip parameter on the [Fact] attribute to temporarily skip a test.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[Property]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[TestProperty]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[Trait]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Set arbitrary metadata on a test")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[DataSource]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[Theory],[XxxData]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Theory (data-driven test).")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-2-assertions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-assertions"}},[t._v("#")]),t._v(" 2.2 Assertions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("NUnit 3.x (Constraint)")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MSTest 15.x")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net 2.x")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Comments")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.EqualTo")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("AreEqual")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Equal")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MSTest and xUnit.net support generic versions of this method")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.EqualTo")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("AreNotEqual")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("NotEqual")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MSTest and xUnit.net support generic versions of this method")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.SameAs")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("AreNotSame")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("NotSame")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.SameAs")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("AreSame")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Same")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Does.Contain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Contains")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Contains")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Does.Not.Contain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("DoesNotContain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("DoesNotContain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Throws.Nothing")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Ensures that the code does not throw any exceptions. See Note 5")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Fail")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('xUnit.net alternative: Assert.True(false, "message")')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.GreaterThan")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net alternative: Assert.True(x > y)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.InRange")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("InRange")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Ensures that a value is in a given inclusive range")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.AssignableFrom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsAssignableFrom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Empty")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Empty")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.False")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsFalse")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("FALSE")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.InstanceOf<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsInstanceOfType")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsType<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.NaN")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net alternative: Assert.True(double.IsNaN(x))")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.AssignableFrom<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net alternative: Assert.False(obj is Type)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.Empty")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("NotEmpty")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.InstanceOf<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsNotInstanceOfType")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsNotType<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsNotNull")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("NotNull")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsNull")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.True")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IsTrue")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("TRUE")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.LessThan")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("xUnit.net alternative: Assert.True(x < y)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Is.Not.InRange")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("NotInRange")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Ensures that a value is not in a given inclusive range")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Throws.TypeOf<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("n/a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Throws<T>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Ensures that the code throws an exact exception")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-xunit示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-xunit示例"}},[t._v("#")]),t._v(" 2.3 Xunit示例")]),t._v(" "),a("p",[t._v("xUnit基本使用参见https://xunit.github.io/docs/getting-started/netfx/visual-studio")]),t._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TemplateTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IClassFixture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TempateFixture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TempateFixture")]),t._v(" _fixture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于[TestInitialize]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TemplateTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TempateFixture")]),t._v(" fixture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _fixture "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fixture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token attribute"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fact")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Assert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Equal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Colin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_fixture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token attribute"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fact")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Assert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TempateFixture")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IDisposable")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于[ClassInitialize]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TempateFixture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据初始化")]),t._v("\n        Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Colin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于[ClassCleanup]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dispose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据清理")]),t._v("\n        Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br")])]),a("p",[t._v("TempateFixture中构造函数和Dispose在单个或多个测试用例都只会执行一次。TemplateTest中构造函数和Dispose(如果直接实现IDisposable)则会在每个测试方法都执行一次。")]),t._v(" "),a("p",[t._v("单元测试应该符合可以重复执行的原则，所以我们通常会在测试结束后对测试产生的变化或恢复和清理，如删除产生的过程数据等。测试贡献和清理数据参见https://xunit.github.io/docs/shared-context")]),t._v(" "),a("p",[t._v("如果需要在单元测试中输出内容需要使用ITestOutputHelper对象，直接注入即可。")]),t._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TemplateTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ITestOutputHelper")]),t._v(" _testOutputHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TemplateTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ITestOutputHelper")]),t._v(" testOutputHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _testOutputHelper "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" testOutputHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token attribute"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fact")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SaveAsTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _testOutputHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试输出..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("实际案例可以参考\nhttps://github.com/colin-chang/MongoHelper/blob/master/ColinChang.MongoHelper.Test/MongoHelperTest.cs")])])}),[],!1,null,null,null);e.default=n.exports}}]);